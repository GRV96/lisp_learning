(setq selection (string-downcase (car *args*)))
; selection is the string "nil" if there is no argument.
(setq run-all (or (string= selection "nil") (string= selection "a")))
; a: all functions
; f: fibonacci
; g: greatest common divisor
; l: leap-year

(when (or run-all (string= selection "g")) (progn
  (load "euclid.lisp")
  (print-gcd 72 48)
  (print-gcd 23 19)
  (print-gcd 144 60)
  (print-gcd 256 64)
  (terpri)
  )
)

(when (or run-all (string= selection "f")) (progn
  (load "fibonacci.lisp")
  (print-fibonacci 0)
  (print-fibonacci 1)
  (print-fibonacci 2)
  (print-fibonacci 3)
  (print-fibonacci 4)
  (print-fibonacci 5)
  (print-fibonacci 6)
  (print-fibonacci 7)
  (print-fibonacci 8)
  (print-fibonacci 9)
  (print-fibonacci 10)
  (print-fibonacci 11)
  (print-fibonacci 12)
  (terpri)
  )
)

(when (or run-all (string= selection "l")) (progn
  (load "leap-year.lisp")
  (print-is-leap-year 2024)
  (print-is-leap-year 2023)
  (print-is-leap-year 2004)
  (print-is-leap-year 2000)
  (print-is-leap-year 1996)
  (print-is-leap-year 1900)
  (print-is-leap-year 842)
  (print-is-leap-year 840)
  (print-is-leap-year 4)
  (print-is-leap-year 1)
  (print-is-leap-year 0)
  (print-is-leap-year -1)
  (print-is-leap-year -4)
  (print-is-leap-year -840)
  (print-is-leap-year -842)
  (print-is-leap-year -1900)
  (print-is-leap-year -1996)
  (print-is-leap-year -2000)
  (print-is-leap-year -2004)
  (print-is-leap-year -2023)
  (print-is-leap-year -2024)
  (terpri)
  )
)
